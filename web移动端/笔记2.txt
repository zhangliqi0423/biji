总结：
     1. 如果是2d旋转，那么元素是绕着点在做旋转动作，如果希望改变旋转圆点的位置通过transform-origin

     2. 如果是3D旋转，那么元素是绕着轴在做旋转动作, 如果希望改变旋转轴的位置通过transform-origin


☞多背景设置方式

     步骤： 背景图片设置中，使用逗号隔开。

     例如：

          background: url('bg1.png') no-repeat left top,
              
                          url('bg2.png') no-repeat right top,
                          
                          url('bg3.png') no-repeat right bottom,
                          
                          url('bg4.png') no-repeat left bottom,
                          
                          url('bg5.png') no-repeat center;


☞属性的私有前缀介绍（了解）：

      作用： 在一定程度上解决CSS3属性中的兼容性。


      设置私有前缀：
           
           -webkit-属性  ： 让对应的webkit内核浏览器支持该属性

           -moz-属性：   让火狐浏览器支持该对应的属性

           -o-属性：    让欧朋浏览器支持该对应的属性

           -ms-属性：   让IE浏览器支持该对应的属性

    例如：

        -webkit-border-radius: 50%;
        -moz-border-radius: 50%;
        -ms-border-radius: 50%;
        -o-border-radius: 50%;
        border-radius: 50%;

☞渐变：一个具有渐变效果的颜色
    1. 线性渐变

          组成： 
               1. 开始颜色和结束颜色

               2. 渐变方向

                      ✔ 通过关键字   to + 方位名称


                      ✔ 通过角度设置一个渐变的方向

                           0deg  -----》 从下向上渐变

                           90deg  -----> 从左向右渐变
                    

               3. 渐变的范围

                     ✔ 渐变的范围使用百分比表示，默认百分比是相对整个元素的宽度。

                     ✔ 如果设置了background-size之后，百分比是相对background-size的大小。

          语法：

              background-image: linear-gradient();


           例如：
             
              background-image: linear-gradient(

                    to right,

                    /* 开始颜色 */
                    red,

                    yellow,

                    pink,

                    /* 结束颜色 */
                    blue

              );
         

    
    2. 径向渐变
          组成：
             1. 开始颜色和结束颜色

             2. 圆点位置和半径（范围）


          语法：

               background-image: radial-gradient();

        例如：
              /* 径向渐变 */
              background-image: radial-gradient(

                    /* 100px 半径范围 */
                    /* at center 圆心位置 */
                    50px at  0px 0px,
                    red,
                    yellow
              );








☞ 移动web页面开发：核心在与解决页面适配【页面中水平方向不能出现滚动条，页面中不能出现缩放效果】

   第一种页面适配解决方案：   流式布局（百分比布局） + 视口设置（meta标签）


☞屏幕大小单位： 寸     3.5寸   手机屏幕中对角线的长度


☞分辨率：   
      ✔ 屏幕分辨率  ： 衡量移动设备在显示画质方面的一个标准。

      ✔ 物理分辨率： 设备的大小（设备的宽度 + 设备高度）【与写代码有一定的联系】


☞像素密度（PPI）： 每英寸面积中所能容纳的像素点个数。

     像素密度作用： 在移动设备中像素越高，渲染出来的画质越好（细腻）


☞ px单位是一个相对单位


☞ 设备独立像素（dpr）: 每台设备中都有一个固定的比例值。 实现了一个页面适配。


☞ 2倍图： 将默认图片大小设置为原来的2倍（图片在不同设备中正常预览）。


☞ 使用代码的方式设置页面适配效果：

         1. 给父元素设置宽度为100%;

         2. 不能让页面中的内容缩放（通过设置meta标签【视口实现】）

           <meta name="viewport" content="width=device-width, initial-scale=1">


            initial-scale=1 ： 禁止页面出现缩放
            width=device-width ： 让盒子等于当前设备宽度（避免页面中出现滚动条）



        

       
     




