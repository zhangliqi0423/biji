☞ 今日目标： 函数

     1. 为什么要学习函数？

            函数的作用： 就是为了将程序中重复出现的代码，封装成一个公共的代码  ---> 函数

      2. 学习函数的步骤：
          
           ✔ 定义函数（声明函数）

              function  自定义函数名称() {

                  逻辑代码（函数体代码）
              }


             注意：
                1. 函数的命名规范( ☞ 函数的名字一般都是以动词开始  ☞ 函数的命名格式以小驼峰命名法（单词首字母小写，第二个单词首字母大写）) 


                2. 函数后面的‘（）’ 不能丢。 


                3. 函数中的代码默认不会执行，需要调用函数，才可以执行里面的代码


                4. 如何调用函数？

                     函数名称();    ------> 函数的调用就是用来执行函数中代码的。


           ✔ 函数中的参数
                 参数：

                     ☞ 形式参数（形参）： 在定义函数时候，函数名后面（）中的变量

                     ☞ 实际参数（实参）： 在调用函数的时候，函数名后面（）中的值

                 总结：

                     1. 如果函数有参数，那么该函数就叫有参函数

                     2. 如果函数没有参数，那么该函数就叫无参函数

                     3. 函数中，形参的个数是根据需求中设计的。

                     4. 形参的名字叫什么都可以。

                     5. 形参变量的值来自于实参的赋值结果

                     6. 形参和实参是一一对应的（赋值结果，个数）

                     

           ✔ 函数中的返回值：

                 返回值：  将函数里面的值返回给函数外部。

                 总结：
                     1. 行内内部的值无法在函数外部使用。（因为作用域的原因）

                     2. return后面是什么，我们在函数外部接收到的就是什么。

                     3. 在函数中，当程序执行到return后，return后面的代码不再执行

                     4. 如果只有return，后面没有任何值，那么返回的就是undefined;

           
           ✔ 作用域：
                作用域： 程序中代码能够起作用的区域。

                全局作用域：

                    ☞ 在函数外部形成的区域，在全局作用域中定义的变量，就是全局变量。

                局部作用域：

                     ☞ 在函数内部形成的区域，在局部作用域中定义的变量，就是局部变量。


                特点：
                     1. 局部变量只能在当前局部作用域中使用

                     2. 全局变量可以在任何作用域使用。

                
           ✔ 作用域链：  多个作用域形成的一个链条状

                   在作用域链中，如果当前作用域中没有程序中需要的值，那么程序就会沿着作用链向上一查找