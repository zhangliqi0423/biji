JavaScript学习：

  1. 建立基本的编程思维
  2. 通过编程的方式解决具体的实际问题（网页中的特效）


JavaScript学习基本路径：

    1. js的基本语法（ECMASCRIPT）

    2. DOM操作 （通过js的方式操作页面中的标签）

    3. BOM操作 （通过js的方式操作浏览器）

    4. Jquery --- 对原生js的封装

    5. Js高级

    6. 服务端程序的开发


开始学习JS:

    1. 为什么会出现js？

          解决：用户和浏览器之间交互
         
    2. 什么是js?

          概念： 基于对象和事件驱动，运行在浏览器客户端的脚本语言。

          ☞js的运行环境： 在浏览器端

          ☞ 对象： 任何一个具体的事物都可以称为是一个对象。

          ☞ 事件驱动： 在网页中任何的一个用户动作都对应称为一个事件
         
    3. js能够实现的效果

          ☞ 制作游戏（手机端）：  js + H5 (canvas)

          ☞ 通过js实现地理定位

          ☞ 实现服务端应用（nodejs）


☞ js学习具体环节：

     1.  js的基本组成

                ✔ 基本语法 （ECMASCRIPT）

                ✔ DOM （通过js操作网页中的标签）

                ✔ BOM （通过js操作浏览器）

    
    2. js中的基本语法介绍：【6天】

        语法：就是写代码的规则

        步骤：
            ✔ js的书写位置介绍：
                    ☞ 外联式写法：将js代码单独一个js文件中，将js文件引入到html页面中

                       通过 <script>标签将js文件引入到html页面中

                       例如：  <script src="01test.js"></script> 

                    ☞ 内嵌式写法：将js代码写到script标签中，嵌入到html文件中。

                       例如： 

                          <script>
        
                            js代码
                        
                         </script>

                    ☞ 行内式写法：将js代码写到标签中
                        例如： <p 事件类型='js代码'></p>

    3. 通过js的方式在网页中输出消息

            ✔  alert('你好,世界');

            ✔  document.write('你好,世界'); 在网页中直接输出消息,还可以在网页中输出标签

            ✔  console.log('你好,世界'); 在浏览器控制台中输出消息

               一般情况下，我们会使用 console.log 打印程序中容易出现错误的信息。


            ✔ prompt(); 是用来接收用户输入的值


            ✔ confirm('你确定上课要睡觉么?');


         注意：
             1. 在js如果要输出信息，那么需要在信息中添加双引号或者单引号

                 ✔ 只有变量不需要添加双引号或者单引号


             2. 在js代码中，代码结束后要以 ';'结束。

             3. 在js中严格区分字母大小写。

    4. 变量(重点)： 在编程中用来随时保存临时数据的一个容器

        使用语法：

              1. 定义变量

               var  自定义变量名;


               2. 给变量赋值

                变量名 = 值;


                '='在编程中称为赋值运算符： 将 赋值运算符右侧的结果赋值给左侧的变量
            

                3. 变量的特点：

                 ☞ 一个变量一次只能保存一个值

                 ☞ 变量中的值是最后一次的赋值结果


                4. 变量的其他使用方式：

                   ☞ 变量定义完成后可以直接赋值

                     例如： var username = prompt('请输入用户名');

                
                   ☞ 可以同时定义多个变量

                     例如：  var username = 'zs', pwd = 123;


              5. 变量的命名规范：

                  1. 与类选择器的命名规范基本一致。

                  2. 变量名不能是关键字：  在js中具有特殊含义或者功能的单词

                  3. 变量名不能是保留字： 在当前版本中没有具体的含义，但是在将来的版本中具有特定的含义

                  4. 变量名中间不能出现空格。

    
    
    5. 数据类型：可以确定一种对应的计算方式。

          ✔ 简单数据类型

               ☞ 字符串类型(string)

                   特点：如果一个变量的值使用了双引号或者单引号，那么该变量的数据类型就是字符串类型


                   字符串类型在运算过程中的特点：

                         如果数学运算加法过程中，出现字符串相加，最后的结果就是一个字符串（string），就是将这些值简单的拼接到一块。

               ☞ 数字类型（number）

                    特点：只要变量的值是数字（整数，负数，小数），那么该变量的数据类型就是数字类型

                    数字类型在进行相加过程中，会按照数学运算的加法进行计算，不会将值进行简单的拼接


               ☞ 布尔类型(boolean):

                    特点： 变量的值只有两个 一个是  true  另外一个是false

                    true：正确的（真）【条件满足】

                    false: 错误的（假的）【条件不满足】


               ☞ undefined类型： 

                     特点：如果一个变量的值是undefined，那么该变量的数据类型就是undefind类型



               ☞ 通过方式 typeof（变量） 可以得到当前变量对应的数据类型。



          
          ✔ 复杂数据类型（对象）
             
   6. 数据类型转换

           ✔ 转化为数字类型：
              
              ☞ Number(变量) ： 可以将其他数据类型转换为数字类型

              ☞ parseInt(变量)： 可以将其他数据类型转换为数字类型

                  ✔ parseInt(变量): 只会保留当前值的整数部分，小数部分直接无视！

                  ✔ 如果是非数字的字符串转数字类型，parsetint依然可以获取到整数，但是通过Number()得到的结果是NaN

                  ✔ NaN： not  a  number


              ☞ parseFloat(变量):   可以将其他数据类型转换为数字类型
                   
                   ✔ 在转换数据类型的过程中，如果遇到小数，那么该方法可以将小数部分保留下来


            ✔ 可以将其他数据类型转换为字符串类型

                 ☞ 变量.toString()

                 ☞ String（变量）


            ✔ 可以将其他数据类型转换为boolean类型

                 ☞ Boolean()


                 ☞ 数字1 转换为布尔类型后是 true

                 ☞ 数字0 转换为布尔类型后是 false


                 ☞0， NaN， undefined , 空字符串  ===》 转换布尔类型后都是false



总结今日重点：

     1. js的基本组成

     2. js的基本书写位置

     3. 变量【定义变量，变量赋值】 -- 变量命名规范    变量（一次只能保存一个值）

     4. 数据类型

            字符串类型    数字类型  布尔类型   undefined


     5. 如何获取数据类型    typeof(变量)


     6. 数据类型转换

          Number()   parseInt()  parseFloat()


          变量.toString()     String(变量)


          Boolean(变量)

             













